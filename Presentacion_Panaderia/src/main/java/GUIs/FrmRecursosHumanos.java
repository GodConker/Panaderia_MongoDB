/* * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUIs;

import control.Control;
import dtos.EmpleadoDTO;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 * @author Dell
 */
public class FrmRecursosHumanos extends javax.swing.JFrame {

    // Declarar el Control
    private Control control;

    /**
     * Creates new form FrmRecursosHumanos
     */
    public FrmRecursosHumanos() {
        initComponents();
        setLocationRelativeTo(null);
        control = new Control();
        llenarTablaEmpleados();
        agregarListenerSeleccionFila();
        configurarComboBoxCargo();

        // Inicializar el botón como "Agregar"
        BtnAgregarActualizarEmpleado.setText("Agregar");
    }

    private void llenarTablaEmpleados() {
        // Obtener la lista de empleados
        List<EmpleadoDTO> listaEmpleados = control.obtenerRepartidores();

        // Obtener el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) TableEmpleados.getModel();

        // Limpiar la tabla
        model.setRowCount(0);

        // Llenar la tabla con los datos de los empleados
        for (EmpleadoDTO empleado : listaEmpleados) {
            Object[] fila = new Object[3];
            fila[0] = empleado.getNombre();
            fila[1] = empleado.getCargo();
            fila[2] = empleado.getSalario();

            // Añadir la fila al modelo
            model.addRow(fila);
        }

        // Configurar la tabla para que no sea editable
        TableEmpleados.setDefaultEditor(Object.class, null); // Deshabilitar edición
    }

    private void agregarListenerSeleccionFila() {
        // Agregar un listener para la selección de filas
        TableEmpleados.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Verificar que no se haya deseleccionado la fila
                if (!e.getValueIsAdjusting()) {
                    int row = TableEmpleados.getSelectedRow();

                    // Si hay una fila seleccionada
                    if (row >= 0) {
                        // Obtener el modelo de la tabla
                        DefaultTableModel model = (DefaultTableModel) TableEmpleados.getModel();

                        // Obtener los datos de la fila seleccionada
                        String nombre = model.getValueAt(row, 0).toString();
                        String cargo = model.getValueAt(row, 1).toString();
                        String salario = model.getValueAt(row, 2).toString();

                        // Establecer los valores en los JTextField y JComboBox
                        TxtfNombreEmpleado.setText(nombre);
                        CBXCargoEmpleado.setSelectedItem(cargo);  // Suponiendo que CBXCargoEmpleado es un JComboBox
                        TxtfSalarioEmpleado.setText(salario);

                        // Cambiar el texto del botón a "Actualizar"
                        BtnAgregarActualizarEmpleado.setText("Actualizar");
                    }
                }
            }
        });
    }

    // Configurar el JComboBox de Cargos
    private void configurarComboBoxCargo() {
        // Deshabilitar la edición del JTextField de salario
        TxtfSalarioEmpleado.setEditable(false);

        // Agregar un Listener para cambiar el salario según el cargo seleccionado
        CBXCargoEmpleado.addActionListener(evt -> actualizarSalarioPorCargo());
    }

    // Actualizar el salario dependiendo del cargo seleccionado
    private void actualizarSalarioPorCargo() {
        // Obtener el cargo seleccionado
        String cargo = (String) CBXCargoEmpleado.getSelectedItem();

        // Establecer el salario dependiendo del cargo con formato decimal
        DecimalFormat df = new DecimalFormat("#.00");  // Formato para 2 decimales
        switch (cargo) {
            case "Repartidor":
                TxtfSalarioEmpleado.setText(df.format(4000.00)); // 4000.00 con dos decimales
                break;
            case "Cajero":
                TxtfSalarioEmpleado.setText(df.format(2000.00)); // 2000.00 con dos decimales
                break;
            case "Panadero":
                TxtfSalarioEmpleado.setText(df.format(6000.00)); // 6000.00 con dos decimales
                break;
            default:
                TxtfSalarioEmpleado.setText("0.00");
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableEmpleados = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        TxtfSalarioEmpleado = new javax.swing.JTextField();
        BtnAgregarActualizarEmpleado = new javax.swing.JButton();
        BtnRegresarMenu = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        TxtfNombreEmpleado = new javax.swing.JTextField();
        BtnEliminarEmpleado = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        CBXCargoEmpleado = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 51, 0));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image11.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Recursos Humanos:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("Nombre:");

        TableEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Cargo", "Salario"
            }
        ));
        jScrollPane1.setViewportView(TableEmpleados);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("Salario:");

        TxtfSalarioEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtfSalarioEmpleadoActionPerformed(evt);
            }
        });

        BtnAgregarActualizarEmpleado.setText("Agregar");
        BtnAgregarActualizarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAgregarActualizarEmpleadoActionPerformed(evt);
            }
        });

        BtnRegresarMenu.setText("Regresar al Menú");
        BtnRegresarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegresarMenuActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("Cargo:");

        TxtfNombreEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtfNombreEmpleadoActionPerformed(evt);
            }
        });

        BtnEliminarEmpleado.setText("Eliminar");
        BtnEliminarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarEmpleadoActionPerformed(evt);
            }
        });

        CBXCargoEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Panadero", "Cajero", "Repartidor", " " }));
        CBXCargoEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBXCargoEmpleadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CBXCargoEmpleado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(TxtfNombreEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TxtfSalarioEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2))
                            .addComponent(jLabel1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BtnAgregarActualizarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BtnEliminarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BtnRegresarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(TxtfNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(CBXCargoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(TxtfSalarioEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnAgregarActualizarEmpleado)
                    .addComponent(BtnEliminarEmpleado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnRegresarMenu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnAgregarActualizarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAgregarActualizarEmpleadoActionPerformed
        // Obtener el texto actual del botón
        String accion = BtnAgregarActualizarEmpleado.getText();

        // Validar que los campos obligatorios estén llenos solo si la acción es "Agregar"
        if (accion.equals("Agregar") && (TxtfNombreEmpleado.getText().trim().isEmpty() || CBXCargoEmpleado.getSelectedIndex() == 0)) {
            javax.swing.JOptionPane.showMessageDialog(
                    this,
                    "Por favor, complete todos los campos obligatorios antes de continuar.",
                    "Campos incompletos",
                    javax.swing.JOptionPane.WARNING_MESSAGE
            );
            return; // Salir del método si los campos no están completos
        }

        // Mostrar un mensaje de confirmación según la acción
        int opcion = javax.swing.JOptionPane.showConfirmDialog(
                this,
                "¿Está seguro de " + (accion.equals("Agregar") ? "agregar" : "actualizar") + " este empleado?",
                "Confirmación",
                javax.swing.JOptionPane.YES_NO_OPTION
        );

        if (opcion == javax.swing.JOptionPane.YES_OPTION) {
            // Mostrar mensaje de éxito
            javax.swing.JOptionPane.showMessageDialog(
                    this,
                    "Empleado " + (accion.equals("Agregar") ? "agregado" : "actualizado") + " exitosamente.",
                    "Éxito",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE
            );

            // Redirigir al formulario FrmMenu
            FrmMenu menu = new FrmMenu(); // Crear instancia de FrmMenu
            menu.setVisible(true);        // Mostrar el formulario del menú
            this.dispose();               // Cerrar el formulario actual
        } else {
            // Limpiar los campos de texto y restablecer el botón a "Agregar"
            TxtfNombreEmpleado.setText("");
            CBXCargoEmpleado.setSelectedIndex(0);
            TxtfSalarioEmpleado.setText("0.00");
            BtnAgregarActualizarEmpleado.setText("Agregar");
        }
    }//GEN-LAST:event_BtnAgregarActualizarEmpleadoActionPerformed

    private void BtnRegresarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegresarMenuActionPerformed
        // Crear una nueva instancia de FrmMenu
        FrmMenu menu = new FrmMenu();
        // Hacer visible la ventana FrmMenu
        menu.setVisible(true);
        // Cerrar la ventana actual
        this.dispose();
    }//GEN-LAST:event_BtnRegresarMenuActionPerformed

    private void TxtfNombreEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtfNombreEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtfNombreEmpleadoActionPerformed

    private void TxtfSalarioEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtfSalarioEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtfSalarioEmpleadoActionPerformed

    private void CBXCargoEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBXCargoEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBXCargoEmpleadoActionPerformed

    private void BtnEliminarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarEmpleadoActionPerformed
    // Verificar si los campos están llenos (empleado nuevo)
    boolean camposLlenos = !TxtfNombreEmpleado.getText().trim().isEmpty() && CBXCargoEmpleado.getSelectedIndex() != 0;

    // Verificar si hay un empleado seleccionado en la tabla
    boolean empleadoSeleccionado = TableEmpleados.getSelectedRow() != -1; // Reemplaza "tablaEmpleados" por el nombre de tu tabla

    if (camposLlenos && !empleadoSeleccionado) {
        // Caso 1: Campos llenos (empleado nuevo) y no hay selección en la tabla
        int opcion = javax.swing.JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro de querer limpiar los campos?",
            "Confirmación de limpieza",
            javax.swing.JOptionPane.YES_NO_OPTION
        );

        if (opcion == javax.swing.JOptionPane.YES_OPTION) {
            // Limpiar los campos
            TxtfNombreEmpleado.setText("");
            CBXCargoEmpleado.setSelectedIndex(0);
            TxtfSalarioEmpleado.setText("0.00");

            javax.swing.JOptionPane.showMessageDialog(
                this,
                "Los campos se han limpiado exitosamente.",
                "Campos limpiados",
                javax.swing.JOptionPane.INFORMATION_MESSAGE
            );
        }

    } else if (empleadoSeleccionado) {
        // Caso 2: Se seleccionó un empleado de la tabla
        int opcion = javax.swing.JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro de querer eliminar al empleado seleccionado?",
            "Confirmación de eliminación",
            javax.swing.JOptionPane.YES_NO_OPTION
        );

        if (opcion == javax.swing.JOptionPane.YES_OPTION) {
            // Aquí puedes implementar la lógica para eliminar al empleado de la base de datos o tabla
            javax.swing.JOptionPane.showMessageDialog(
                this,
                "Empleado eliminado exitosamente.",
                "Éxito",
                javax.swing.JOptionPane.INFORMATION_MESSAGE
            );

            // Limpiar los campos después de la eliminación
            TxtfNombreEmpleado.setText("");
            CBXCargoEmpleado.setSelectedIndex(0);
            TxtfSalarioEmpleado.setText("0.00");
        }
    } else {
        // Si no hay campos llenos ni empleado seleccionado
        javax.swing.JOptionPane.showMessageDialog(
            this,
            "No hay información para eliminar.",
            "Aviso",
            javax.swing.JOptionPane.WARNING_MESSAGE
        );
    }
    }//GEN-LAST:event_BtnEliminarEmpleadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRecursosHumanos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRecursosHumanos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRecursosHumanos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRecursosHumanos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRecursosHumanos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAgregarActualizarEmpleado;
    private javax.swing.JButton BtnEliminarEmpleado;
    private javax.swing.JButton BtnRegresarMenu;
    private javax.swing.JComboBox<String> CBXCargoEmpleado;
    private javax.swing.JTable TableEmpleados;
    private javax.swing.JTextField TxtfNombreEmpleado;
    private javax.swing.JTextField TxtfSalarioEmpleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
